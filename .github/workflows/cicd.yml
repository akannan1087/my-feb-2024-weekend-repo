name: cicd-workflow with Tomcat, SonarQube, and Slack

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Cache SonarQube packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Build and run SonarQube analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn verify sonar:sonar \
        -Dsonar.projectKey=YourProjectKey \
        -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
        -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    - name: Build with Maven
      run: mvn install -f MyWebApp/pom.xml

    - name: Deploy to Tomcat
      run: |
        curl -v -u ${{ secrets.TOMCAT_USER }}:${{ secrets.TOMCAT_PASSWORD }} \
        -T MyWebApp/target/MyWebApp.war \
        "http://${{ secrets.TOMCAT_HOST }}/manager/text/deploy?path=/MyWebApp&update=true"

    - name: Notify Slack on Success
      if: success()
      uses: 8398a7/action-slack@v3
      with:
        status: custom
        fields: workflow,job,commit,author,took
        custom_payload: |
          {
            "text": ":white_check_mark: *Deployment Successful!*",
            "attachments": [
              {
                "color": "good",
                "title": "CI/CD Workflow",
                "text": "Deployment to Tomcat succeeded for `${{ github.repository }}` on `${{ github.ref_name }}`."
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Notify Slack on Failure
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: custom
        fields: workflow,job,commit,author,took
        custom_payload: |
          {
            "text": ":x: *Deployment Failed!*",
            "attachments": [
              {
                "color": "danger",
                "title": "CI/CD Workflow",
                "text": "Deployment to Tomcat failed for `${{ github.repository }}` on `${{ github.ref_name }}`. Check the logs for details."
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}